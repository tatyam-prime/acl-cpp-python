class mcf_graph:
    def __init__(self, n: int = 0) -> None: ...
    def add_edge(self, from_: int, to: int, cap: int, cost: int) -> int: ...
    def flow(self, s: int, t: int, flow_limit: int = 0x7FFF_FFFF_FFFF_FFFF) -> tuple[int, int]: ...
    def slope(self, s: int, t: int, flow_limit: int = 0x7FFF_FFFF_FFFF_FFFF) -> list[tuple[int, int]]: ...
    class edge:
        from_: int
        to: int
        cap: int
        flow: int
        cost: int
        def __init__(self, from_: int, to: int, cap: int, flow: int, cost: int) -> None: ...
        def __repr__(self) -> str: ...
    def get_edge(self, i: int) -> edge: ...
    def edges(self) -> list[edge]: ...
